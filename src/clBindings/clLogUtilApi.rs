pub use crate::clBindings::clCommon::*;
pub use crate::clBindings::clHeapApi::*;
/* automatically generated by rust-bindgen 0.66.1 */

pub const CL_LOG_MAX_MSG_LEN: u32 = 1024;
pub const CL_LOG_MAX_NUM_MSGS: u32 = 992;
pub const CL_LOG_AREA_UNSPECIFIED: &[u8; 4] = b"---\0";
pub const CL_LOG_CONTEXT_UNSPECIFIED: &[u8; 4] = b"---\0";
pub const CL_LOG_DEFAULT_SYS_SERVICE_ID: u32 = 1;
extern "C" {
    #[doc = " It takes one of the above severity level.\n\ntypedef ClUint8T   ClLogSeverityT;\nMoved to clLogApi"]
    pub fn clLogUtilLibInitialize() -> ClRcT;
}
extern "C" {
    pub fn clLogUtilLibFinalize(logLibInit: ClBoolT) -> ClRcT;
}
extern "C" {
    #[doc = " This macro provides the support to log messages by specifying\n the severity of log message and server information like the\n sub-component aera and the context of logging, here user can provide\n multiline messages (separate your lines with \\\\n).\n\n This macro is for ASP components only, since it directs all logs\n to the OpenClovis system log."]
    pub fn parseMultiline(ppMsg: *mut *mut ClCharT, pFmt: *const ClCharT, ...);
}
